version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  doc-conversion:
    build:
      context: ./doc-conversion
      dockerfile: Dockerfile
    container_name: doc-conversion
    depends_on:
      - postgres
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_RABBITMQ_HOST: rabbitmq
    ports:
      - "8080:8080"
    volumes:
      - doc-conversion-logs:/app/logs

  doc-conversion-gateway:
    build:
      context: ./doc-conversion-gateway
      dockerfile: Dockerfile
    container_name: doc-conversion-gateway
    depends_on:
      - redis
      - doc-conversion
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      APPLICATION_ENV: production
    ports:
      - "8082:8082"
    volumes:
      - doc-conversion-gateway-logs:/app/logs

  doc-conversion-test:
    image: maven:3.8.6-eclipse-temurin-17-alpine
    container_name: doc-conversion-test
    working_dir: /app
    volumes:
      - ./doc-conversion:/app
    entrypoint: [ "mvn", "test" ]

  doc-conversion-gateway-test:
    image: maven:3.8.6-eclipse-temurin-17-alpine
    container_name: doc-conversion-gateway-test
    working_dir: /app
    volumes:
      - ./doc-conversion-gateway:/app
    entrypoint: [ "mvn", "test" ]

volumes:
  postgres_data:
  doc-conversion-logs:
  doc-conversion-gateway-logs:
